{
  "root": true,
  "env": {
    "browser": true,
    "amd": true,
    "node": true,
    "es6": true
  },
  "parser": "@typescript-eslint/parser",
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/strict-type-checked",
    "plugin:@typescript-eslint/stylistic-type-checked",
    "plugin:react/recommended",
    "plugin:react/jsx-runtime",
    "plugin:jsx-a11y/recommended",
    "eslint-config-next",
    "prettier"
  ],
  "parserOptions": {
    "project": "./tsconfig.json",
    "ecmaVersion": 2020,
    "sourceType": "module"
  },
  "settings": {
    "react": {
      "version": "detect"
    },
    "jsx-a11y": {
      "components": {
        "Input": "input",
        "Button": "button",
        "Link": "a"
      }
    }
  },
  "plugins": [
    "@typescript-eslint",
    "react",
    "simple-import-sort",
    "eslint-plugin-no-inline-styles",
    "jsx-a11y"
  ],
  "rules": {
    "@next/next/no-img-element": "off",
    "@typescript-eslint/consistent-type-imports": "warn",
    "@typescript-eslint/naming-convention": [
      "warn",
      {
        "selector": "variable",
        "types": ["boolean"],
        "format": ["PascalCase"],
        "prefix": ["is", "should", "has", "can", "did", "will", "show"]
      }
    ],
    "@typescript-eslint/no-empty-function": "off",
    "@typescript-eslint/no-misused-promises": [
      "error",
      { "checksVoidReturn": false }
    ],
    "@typescript-eslint/no-confusing-void-expression": "off",
    "import/no-default-export": "error",
    "jsx-a11y/label-has-associated-control": "off",
    "jsx-a11y/mouse-events-have-key-events": "error",
    "no-inline-styles/no-inline-styles": "warn",
    "react/button-has-type": "warn",
    "react/display-name": "error",
    "react/function-component-definition": "warn",
    "react/hook-use-state": "warn",
    "react/jsx-fragments": ["warn", "syntax"],
    // DISCUSS: rule does not fit case where a handler function is passed as prop
    // "react/jsx-handler-names": ["warn", {
    //   "eventHandlerPrefix": "handle",
    //   "eventHandlerPropPrefix": "on",
    //   "checkLocalVariables": true,
    //   "checkInlineFunction": true
    // }],
    "react/jsx-no-constructed-context-values": "error",
    // "react/jsx-no-leaked-render": "warn",
    "react/jsx-no-useless-fragment": "warn",
    "react/no-invalid-html-attribute": "warn",
    "simple-import-sort/exports": "warn",
    "simple-import-sort/imports": "warn"
  },
  "overrides": [
    {
      "files": ["src/pages/**/*.{ts,tsx}"],
      "rules": {
        // Next.js pages are exported using default export
        "import/no-default-export": "off",
        // Next.js page components are typed as arrow functions using the 'NextPage' type helper
        "react/function-component-definition": [
          "warn",
          { "namedComponents": "arrow-function" }
        ]
      }
    },
    {
      "files": ["src/**/*.{ts,tsx}"],
      "excludedFiles": ["src/services/**/*.{ts,tsx}"],
      "rules": {
        "no-restricted-syntax": [
          "warn",
          {
            "selector": "CallExpression[callee.object.name='console'][callee.property.name!=/^(warn|error|info|trace)$/]",
            "message": "Unexpected property on console object was called"
          }
        ]
      }
    }
  ]
}
